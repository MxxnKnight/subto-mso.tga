# render.yaml
# This configuration defines a simple web service for the bot.
# The database is now built and updated via a scheduled GitHub Action.

services:
  # Web service for the FastAPI bot
  - type: web
    name: subtitle-bot
    env: python
    # The build command now runs the scraper to ensure the db.json exists on initial deploy.
    # Subsequent updates will be committed to the repo by the GitHub Action, triggering a new deploy.
    buildCommand: "pip install -r requirements.txt && SCRAPER_MAX_PAGES=15 python scraper.py"
    startCommand: "uvicorn app:app --host 0.0.0.0 --port $PORT"
    healthCheckPath: /healthz

    envVars:
      - key: TELEGRAM_BOT_TOKEN
        sync: false # Keep this secret
      - key: WEBHOOK_SECRET
        generateValue: true # Auto-generate a secure secret
      - key: OWNER_ID
        sync: false # Keep this secret
      - key: PYTHON_VERSION
        value: 3.11.4
